{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\stora-next-20220617T154210Z-001\\\\stora-next\\\\stora\\\\src\\\\components\\\\header\\\\elements\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Select, Button, AutoComplete } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { SHOP } from \"../../../common/defines\";\nimport { getProductsByCategory } from \"../../../common/shopUtils\";\nimport { setGlobalCategory, setGlobalSearch } from \"../../../redux/actions/globalActions\";\nimport { setSubCategory } from \"../../../redux/actions/shopActions\";\nimport useDebounce from \"../../../common/useDebound\";\n\nfunction SearchBarMobile(_ref) {\n  _s();\n\n  var _this = this;\n\n  var fillData = _ref.fillData,\n      placeholder = _ref.placeholder;\n  var Option = Select.Option;\n  var router = useRouter();\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"\"),\n      search = _useState[0],\n      setSearch = _useState[1];\n\n  var _useState2 = useState(false),\n      showDropdownOptions = _useState2[0],\n      setShowDropdownOptions = _useState2[1];\n\n  var globalState = useSelector(function (state) {\n    return state.globalReducer;\n  });\n  var deboundValue = useDebounce(search, 300);\n  useEffect(function () {\n    dispatch(setGlobalSearch(deboundValue));\n  }, [deboundValue]);\n\n  var renderAutoFillItem = function renderAutoFillItem() {\n    var product = getProductsByCategory(fillData, globalState.category);\n    return product.map(function (item) {\n      return {\n        value: item.name\n      };\n    });\n  };\n\n  var onSelectCateory = function onSelectCateory(value) {\n    dispatch(setGlobalCategory(value));\n    dispatch(setSubCategory(\"\"));\n  };\n\n  var openDropdownOption = function openDropdownOption(value) {\n    setShowDropdownOptions(true);\n    setSearch(value);\n  };\n\n  var closeDropdownOption = function closeDropdownOption() {\n    setShowDropdownOptions(false);\n  };\n\n  var onSelectOption = function onSelectOption(value, option) {\n    setSearch(value);\n    closeDropdownOption();\n  };\n\n  var onSearch = function onSearch() {\n    if (!search || search === \"\") {\n      router.push(\"/\");\n    } else {\n      router.push({\n        pathname: \"/\",\n        query: {\n          q: search\n        }\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"menu-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"menu-search__form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    className: \"menu-search__form-select\",\n    defaultValue: globalState.category,\n    style: {\n      width: 150\n    },\n    onChange: onSelectCateory,\n    value: globalState.category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, SHOP.category.map(function (item, index) {\n    return __jsx(Option, {\n      key: index,\n      value: item.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, item.name);\n  })), __jsx(\"div\", {\n    className: \"menu-search__form-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(AutoComplete, {\n    allowClear: true,\n    backfill: true,\n    open: showDropdownOptions,\n    onSearch: openDropdownOption,\n    onBlur: closeDropdownOption,\n    onSelect: onSelectOption,\n    options: renderAutoFillItem(),\n    placeholder: placeholder,\n    filterOption: function filterOption(inputValue, option) {\n      return option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    onClick: onSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, __jsx(\"i\", {\n    className: \"icon_search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })))));\n}\n\n_s(SearchBarMobile, \"EmRehdJSQPDyleUnWZMxXhDvbjU=\", false, function () {\n  return [useRouter, useDispatch, useSelector, useDebounce];\n});\n\n_c = SearchBarMobile;\nexport default _c2 = React.memo(SearchBarMobile);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchBarMobile\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/user/Downloads/stora-next-20220617T154210Z-001/stora-next/stora/src/components/header/elements/SearchBar.js"],"names":["React","useState","useEffect","Select","Button","AutoComplete","useSelector","useDispatch","useRouter","SHOP","getProductsByCategory","setGlobalCategory","setGlobalSearch","setSubCategory","useDebounce","SearchBarMobile","fillData","placeholder","Option","router","dispatch","search","setSearch","showDropdownOptions","setShowDropdownOptions","globalState","state","globalReducer","deboundValue","renderAutoFillItem","product","category","map","item","value","name","onSelectCateory","openDropdownOption","closeDropdownOption","onSelectOption","option","onSearch","push","pathname","query","q","width","index","inputValue","toUpperCase","indexOf","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Select, Button, AutoComplete } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport { SHOP } from \"../../../common/defines\";\r\nimport { getProductsByCategory } from \"../../../common/shopUtils\";\r\nimport {\r\n  setGlobalCategory,\r\n  setGlobalSearch,\r\n} from \"../../../redux/actions/globalActions\";\r\nimport { setSubCategory } from \"../../../redux/actions/shopActions\";\r\nimport useDebounce from \"../../../common/useDebound\";\r\n\r\nfunction SearchBarMobile({ fillData, placeholder }) {\r\n  const { Option } = Select;\r\n  const router = useRouter();\r\n  const dispatch = useDispatch();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [showDropdownOptions, setShowDropdownOptions] = useState(false);\r\n  const globalState = useSelector((state) => state.globalReducer);\r\n  const deboundValue = useDebounce(search, 300);\r\n  useEffect(() => {\r\n    dispatch(setGlobalSearch(deboundValue));\r\n  }, [deboundValue]);\r\n  const renderAutoFillItem = () => {\r\n    let product = getProductsByCategory(fillData, globalState.category);\r\n    return product.map((item) => ({\r\n      value: item.name,\r\n    }));\r\n  };\r\n  const onSelectCateory = (value) => {\r\n    dispatch(setGlobalCategory(value));\r\n    dispatch(setSubCategory(\"\"));\r\n  };\r\n  const openDropdownOption = (value) => {\r\n    setShowDropdownOptions(true);\r\n    setSearch(value);\r\n  };\r\n  const closeDropdownOption = () => {\r\n    setShowDropdownOptions(false);\r\n  };\r\n  const onSelectOption = (value, option) => {\r\n    setSearch(value);\r\n    closeDropdownOption();\r\n  };\r\n  const onSearch = () => {\r\n    if (!search || search === \"\") {\r\n      router.push(\"/\");\r\n    } else {\r\n      router.push({\r\n        pathname: \"/\",\r\n        query: { q: search },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"menu-search\">\r\n      <div className=\"menu-search__form\">\r\n        <Select\r\n          className=\"menu-search__form-select\"\r\n          defaultValue={globalState.category}\r\n          style={{ width: 150 }}\r\n          onChange={onSelectCateory}\r\n          value={globalState.category}\r\n        >\r\n          {SHOP.category.map((item, index) => (\r\n            <Option key={index} value={item.name}>\r\n              {item.name}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n        <div className=\"menu-search__form-input\">\r\n          <AutoComplete\r\n            allowClear\r\n            backfill={true}\r\n            open={showDropdownOptions}\r\n            onSearch={openDropdownOption}\r\n            onBlur={closeDropdownOption}\r\n            onSelect={onSelectOption}\r\n            options={renderAutoFillItem()}\r\n            placeholder={placeholder}\r\n            filterOption={(inputValue, option) =>\r\n              option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !==\r\n              -1\r\n            }\r\n          />\r\n          <Button onClick={onSearch}>\r\n            <i className=\"icon_search\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(SearchBarMobile);\r\n"]},"metadata":{},"sourceType":"module"}