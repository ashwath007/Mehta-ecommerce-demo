{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\stora-next-20220617T154210Z-001\\\\stora-next\\\\stora\\\\src\\\\components\\\\footer\\\\elements\\\\FooterSubcribe.js\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nvar CustomForm = React.memo(_c = function _c(_ref) {\n  var status = _ref.status,\n      message = _ref.message,\n      onValidated = _ref.onValidated;\n\n  var onFinish = function onFinish(value) {\n    console.log(\"Success:\", value);\n    value && onValidated({\n      EMAIL: value.email\n    });\n  };\n\n  var onFinishFailed = function onFinishFailed(errorInfo) {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Form, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    className: \"footer-subcribe__form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(Form.Item, {\n    noStyle: true,\n    name: \"email\",\n    rules: [{\n      type: \"email\",\n      message: \"The input is not valid E-mail!\"\n    }, {\n      required: true,\n      message: \"Please input your E-mail!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    placeholder: \"Your email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    noStyle: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    type: \"link\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"SUBSCRIBE\"))), status === \"sending\" && __jsx(\"div\", {\n    style: {\n      color: \"blue\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 32\n    }\n  }, \"sending...\"), status === \"error\" && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    dangerouslySetInnerHTML: {\n      __html: message\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), status === \"success\" && __jsx(\"div\", {\n    style: {\n      color: \"green\"\n    },\n    dangerouslySetInnerHTML: {\n      __html: message\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n});\n_c2 = CustomForm;\nexport default function FooterSubcribe(_ref2) {\n  var _this2 = this;\n\n  var url = _ref2.url;\n  return __jsx(MailchimpSubscribe, {\n    url: url,\n    render: function render(_ref3) {\n      var subscribe = _ref3.subscribe,\n          status = _ref3.status,\n          message = _ref3.message;\n      return __jsx(CustomForm, {\n        status: status,\n        message: message,\n        onValidated: function onValidated(formData) {\n          return subscribe(formData);\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  });\n}\n_c3 = FooterSubcribe;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CustomForm$React.memo\");\n$RefreshReg$(_c2, \"CustomForm\");\n$RefreshReg$(_c3, \"FooterSubcribe\");","map":{"version":3,"sources":["C:/Users/user/Downloads/stora-next-20220617T154210Z-001/stora-next/stora/src/components/footer/elements/FooterSubcribe.js"],"names":["React","MailchimpSubscribe","Form","Input","Button","Checkbox","CustomForm","memo","status","message","onValidated","onFinish","value","console","log","EMAIL","email","onFinishFailed","errorInfo","remember","type","required","color","__html","FooterSubcribe","url","subscribe","formData"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\n\r\nconst CustomForm = React.memo(({ status, message, onValidated }) => {\r\n  const onFinish = (value) => {\r\n    console.log(\"Success:\", value);\r\n    value &&\r\n      onValidated({\r\n        EMAIL: value.email,\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        name=\"basic\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        className=\"footer-subcribe__form\"\r\n      >\r\n        <Form.Item\r\n          noStyle={true}\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              type: \"email\",\r\n              message: \"The input is not valid E-mail!\",\r\n            },\r\n            {\r\n              required: true,\r\n              message: \"Please input your E-mail!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Your email\" />\r\n        </Form.Item>\r\n        <Form.Item noStyle={true}>\r\n          <Button type=\"link\" htmlType=\"submit\">\r\n            SUBSCRIBE\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      {status === \"sending\" && <div style={{ color: \"blue\" }}>sending...</div>}\r\n      {status === \"error\" && (\r\n        <div\r\n          style={{ color: \"red\" }}\r\n          dangerouslySetInnerHTML={{ __html: message }}\r\n        />\r\n      )}\r\n      {status === \"success\" && (\r\n        <div\r\n          style={{ color: \"green\" }}\r\n          dangerouslySetInnerHTML={{ __html: message }}\r\n        />\r\n      )}\r\n      <br />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default function FooterSubcribe({ url }) {\r\n  return (\r\n    <MailchimpSubscribe\r\n      url={url}\r\n      render={({ subscribe, status, message }) => (\r\n        <CustomForm\r\n          status={status}\r\n          message={message}\r\n          onValidated={(formData) => subscribe(formData)}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}