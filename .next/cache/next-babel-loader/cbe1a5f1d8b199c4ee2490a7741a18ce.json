{"ast":null,"code":"//Products\nexport const getProductsByCategory = (arr, category) => {\n  return category ? arr.filter(item => item.category.toLowerCase() === category.toLowerCase()) : arr;\n};\nexport const getProductsBySlug = (arr, slug) => {\n  return slug && typeof slug === \"string\" ? arr.find(p => p.slug.toLowerCase() === slug.toLowerCase()) : arr;\n};\nexport const getAllValuesOfKey = (arr, key) => {\n  if (key && typeof key === \"string\") {\n    let subCategory = [];\n\n    for (let i = 0; i < arr.length; i++) {\n      if (!subCategory.includes(arr[i][key])) {\n        subCategory.push(arr[i][key]);\n      }\n    }\n\n    return subCategory.length > 0 ? subCategory : null;\n  } else {\n    return null;\n  }\n};\nexport const getAllSubCategories = (arr, category) => {\n  if (category && typeof category === \"string\") {\n    let products = getProducts(arr, category);\n    let subCategoriesArr = getAllValuesOfKey(products, \"subCategory\");\n    return subCategoriesArr !== null ? subCategoriesArr : null;\n  } else {\n    return null;\n  }\n};\nexport const getProductsBySort = (products, type) => {\n  function sortWithCondition(arr, value, reverse = false) {\n    let num = reverse ? -1 : 1;\n    return arr.sort((a, b) => {\n      if (a[value] < b[value]) {\n        return -1 * num;\n      }\n\n      if (a[value] > b[value]) {\n        return 1 * num;\n      }\n\n      return 0;\n    });\n  }\n\n  if (type === \"az\") {\n    return sortWithCondition(products, \"name\");\n  } else if (type === \"za\") {\n    return sortWithCondition(products, \"name\", true);\n  } else if (type === \"lowHigh\") {\n    return sortWithCondition(products, \"price\");\n  } else if (type === \"highLow\") {\n    return sortWithCondition(products, \"price\", true);\n  } else {\n    return products;\n  }\n};\nexport const getProductsByFilter = (products, sortType, subCategory) => {\n  let filteredProduct = subCategory ? products.filter(product => product.subCategory.toLowerCase() === subCategory.toLowerCase()) : products;\n  return getProductsBySort(filteredProduct, sortType);\n};\nexport const getProductsBySearch = (products, keyword) => {\n  return keyword && keyword !== \"\" ? products.filter(product => product.name.toLowerCase().includes(keyword.toLowerCase())) : products;\n}; //Cart\n\nexport const getTotalProductInCart = arr => {\n  return arr ? arr.reduce((total, item) => total + item.cartQuantity, 0) : 0;\n};\nexport const calculateTotalPrice = arr => {\n  let total = 0;\n  arr.forEach(item => {\n    if (item.discount) {\n      total += item.cartQuantity ? (item.price - item.discount) * item.cartQuantity : item.price - item.discount;\n    } else {\n      total += item.cartQuantity ? item.price * item.cartQuantity : item.price;\n    }\n  });\n  return total;\n};\nexport const checkProductInCart = (cartArr, pid) => {\n  return pid ? cartArr.find(item => item.id === pid) : null;\n};\nexport const checkAvaiableQuantityToAdd = (arr, product) => {\n  const productsInCart = arr.filter(item => item.id === product.id);\n\n  if (productsInCart && productsInCart.length > 0) {\n    const totalProductQuantityInCart = productsInCart.length > 0 && productsInCart.reduce((total, item) => total + item.cartQuantity, 0);\n    let avaiable = product.quantity - totalProductQuantityInCart;\n    return avaiable < 1 ? 0 : avaiable;\n  } else {\n    product.quantity;\n  }\n}; //Wishlist\n\nexport const checkProductInWishlist = (wishlistArr, pid) => {\n  return pid ? wishlistArr.find(item => item.id === pid) : null;\n};","map":{"version":3,"sources":["C:/Users/user/Downloads/stora-next-20220617T154210Z-001/stora-next/stora/src/common/shopUtils.js"],"names":["getProductsByCategory","arr","category","filter","item","toLowerCase","getProductsBySlug","slug","find","p","getAllValuesOfKey","key","subCategory","i","length","includes","push","getAllSubCategories","products","getProducts","subCategoriesArr","getProductsBySort","type","sortWithCondition","value","reverse","num","sort","a","b","getProductsByFilter","sortType","filteredProduct","product","getProductsBySearch","keyword","name","getTotalProductInCart","reduce","total","cartQuantity","calculateTotalPrice","forEach","discount","price","checkProductInCart","cartArr","pid","id","checkAvaiableQuantityToAdd","productsInCart","totalProductQuantityInCart","avaiable","quantity","checkProductInWishlist","wishlistArr"],"mappings":"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","sourcesContent":["//Products\r\nexport const getProductsByCategory = (arr, category) => {\r\n  return category\r\n    ? arr.filter(\r\n        (item) => item.category.toLowerCase() === category.toLowerCase()\r\n      )\r\n    : arr;\r\n};\r\n\r\nexport const getProductsBySlug = (arr, slug) => {\r\n  return slug && typeof slug === \"string\"\r\n    ? arr.find((p) => p.slug.toLowerCase() === slug.toLowerCase())\r\n    : arr;\r\n};\r\n\r\nexport const getAllValuesOfKey = (arr, key) => {\r\n  if (key && typeof key === \"string\") {\r\n    let subCategory = [];\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (!subCategory.includes(arr[i][key])) {\r\n        subCategory.push(arr[i][key]);\r\n      }\r\n    }\r\n    return subCategory.length > 0 ? subCategory : null;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getAllSubCategories = (arr, category) => {\r\n  if (category && typeof category === \"string\") {\r\n    let products = getProducts(arr, category);\r\n    let subCategoriesArr = getAllValuesOfKey(products, \"subCategory\");\r\n    return subCategoriesArr !== null ? subCategoriesArr : null;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getProductsBySort = (products, type) => {\r\n  function sortWithCondition(arr, value, reverse = false) {\r\n    let num = reverse ? -1 : 1;\r\n    return arr.sort((a, b) => {\r\n      if (a[value] < b[value]) {\r\n        return -1 * num;\r\n      }\r\n      if (a[value] > b[value]) {\r\n        return 1 * num;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n  if (type === \"az\") {\r\n    return sortWithCondition(products, \"name\");\r\n  } else if (type === \"za\") {\r\n    return sortWithCondition(products, \"name\", true);\r\n  } else if (type === \"lowHigh\") {\r\n    return sortWithCondition(products, \"price\");\r\n  } else if (type === \"highLow\") {\r\n    return sortWithCondition(products, \"price\", true);\r\n  } else {\r\n    return products;\r\n  }\r\n};\r\n\r\nexport const getProductsByFilter = (products, sortType, subCategory) => {\r\n  let filteredProduct = subCategory\r\n    ? products.filter(\r\n        (product) =>\r\n          product.subCategory.toLowerCase() === subCategory.toLowerCase()\r\n      )\r\n    : products;\r\n  return getProductsBySort(filteredProduct, sortType);\r\n};\r\n\r\nexport const getProductsBySearch = (products, keyword) => {\r\n  return keyword && keyword !== \"\"\r\n    ? products.filter((product) =>\r\n        product.name.toLowerCase().includes(keyword.toLowerCase())\r\n      )\r\n    : products;\r\n};\r\n\r\n//Cart\r\nexport const getTotalProductInCart = (arr) => {\r\n  return arr ? arr.reduce((total, item) => total + item.cartQuantity, 0) : 0;\r\n};\r\n\r\nexport const calculateTotalPrice = (arr) => {\r\n  let total = 0;\r\n  arr.forEach((item) => {\r\n    if (item.discount) {\r\n      total += item.cartQuantity\r\n        ? (item.price - item.discount) * item.cartQuantity\r\n        : item.price - item.discount;\r\n    } else {\r\n      total += item.cartQuantity ? item.price * item.cartQuantity : item.price;\r\n    }\r\n  });\r\n  return total;\r\n};\r\n\r\nexport const checkProductInCart = (cartArr, pid) => {\r\n  return pid ? cartArr.find((item) => item.id === pid) : null;\r\n};\r\n\r\nexport const checkAvaiableQuantityToAdd = (arr, product) => {\r\n  const productsInCart = arr.filter((item) => item.id === product.id);\r\n  if (productsInCart && productsInCart.length > 0) {\r\n    const totalProductQuantityInCart =\r\n      productsInCart.length > 0 &&\r\n      productsInCart.reduce((total, item) => total + item.cartQuantity, 0);\r\n    let avaiable = product.quantity - totalProductQuantityInCart;\r\n    return avaiable < 1 ? 0 : avaiable;\r\n  } else {\r\n    product.quantity;\r\n  }\r\n};\r\n\r\n//Wishlist\r\n\r\nexport const checkProductInWishlist = (wishlistArr, pid) => {\r\n  return pid ? wishlistArr.find((item) => item.id === pid) : null;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}